@{
    ViewBag.Title = "Index";
}

<script>

        $(document).ready(function () {

            $('#submitSuite').click(function () {

                var code = $('#sweetStackCode').val();
                $.post('/Parse/Validate', { sweetStackCode: code }, function (result) {

                    if (result.Success) {
                        $('#validation').removeClass('alert alert-danger').addClass('alert alert-success').html('This is valid Sweet Stack code :)')
                    }
                    else {
                        var err = "<ul>";
                        for (var i = 0; i < result.Errors.length; i++) {
                            err += '<li>' + result.Errors[i] + '</li>';
                        }

                        err += '</ul>';

                        $('#validation').removeClass('alert alert-success').addClass('alert alert-danger').html(err)
                    }

                });

                return false;

            });

            $('#runSuite').click(function (e) {

                var code = $('#sweetStackCode').val();
                var name = $('#testName').val();
                $.post('/Parse/Run', { sweetStackCode: code, name: name }, function (result) {

                    if (result.Success) {
                        $('#validation').removeClass('alert alert-danger').addClass('alert alert-success').html('This is valid Sweet Stack code :)')
                    }
                    else {
                        var err = "<ul>";
                        for (var i = 0; i < result.Errors.length; i++) {
                            err += '<li>' + result.Errors[i] + '</li>';
                        }

                        err += '</ul>';

                        $('#validation').removeClass('alert alert-success').addClass('alert alert-danger').html(err)
                        e.preventDefault();
                        return false;
                    }

                });



            });

        });


</script>

<h1 class="sweetTitle">New SweetTest</h1>
<hr/>
<div class="row">
    <div class="col-md-4">
        <div class="row">
            <div class="col-md-6">
                <h3>Syntax</h3>
                <dl>
                    <dt>size</dt>
                    <dd>
                        Simulate a device (default is desktop)
                        <br />
                        <code>size -> smartphone</code><br />
                        <code>size -> phablet</code><br />
                        <code>size -> minitablet</code><br />
                        <code>size -> tablet</code><br />
                        <code>size -> desktop</code>
                    </dd>
                    <dt>open</dt>
                    <dd>
                        Go to a url
                        <br />
                        <code>open -> http://www.bing.com</code>
                    </dd>
                    <dt>click</dt>
                    <dd>
                        Click on the matching element<br />
                        <code>click -> #myBtn</code>
                    </dd>
                    <dt>wait</dt>
                    <dd>
                        Pause for seconds
                        <br />
                        <code>wait -> 2</code>
                    </dd>
                    <dt>type</dt>
                    <dd>
                        Type keys to the matching element
                        <br />
                        <code>type .myTxtBox -> This is my test input</code>
                    </dd>
                    <dt>proof</dt>
                    <dd>
                        Takes a screenshot
                        <br />
                        <code>proof -> homepage.png</code>
                    </dd>
                    <dt>-></dt>
                    <dd>
                        Specifies what follows as a string of text
                        <br />
                        <code>
                            type #txtBox -> Kaylee Eluvian
                        </code>
                    </dd>
                    <dt>#</dt>
                    <dd>
                        Comment
                        <br />
                        <code># This is a comment</code>
                    </dd>
                </dl>
            </div>
            <div class="col-md-6">
                <h3>Tests</h3>
                <dl>
                    <dt>text</dt>
                    <dd>
                        Checks that the specified text exists on the page
                        <br />
                        <code>text -> This text should appear</code>
                    </dd>
                    <dt>value</dt>
                    <dd>
                        <p>
                            Gets the value of the specified element
                            <br />
                            Checks that a value <em>exactly</em> equals a string
                            <br />
                            <code>
                                type #txtBox -> Kaylee Eluvian
                            </code>
                            <br />
                            <code>
                                value #txtBox => Kaylee Eluvian
                            </code>
                        </p>
                        <p>
                            Checks that a value <em>contains</em> a string
                            <br />
                            <code>
                                type #txtBox -> Kaylee Eluvian
                            </code>
                            <br />
                            <code>
                                value #txtBox ~> Eluvian
                            </code>
                        </p>
                        <p>
                            Checks that a value <em>does not</em> contain a string
                            <code>
                                type #txtBox -> Kaylee Eluvian
                            </code>
                            <br />
                            <code>
                                value #txtBox !> Kalyee
                            </code>
                        </p>
                    </dd>
                    <dt>chose</dt>
                    <dd>
                        Gets whether the specified element is checked/selected
                        <br />
                        <code>chose -> #myChkBox</code>
                    </dd>
                </dl>
            </div>
        </div>
    </div>
    <div class="col-md-8 well well-small">
        <h3>Test code</h3>
        <div id="validation"></div>
        <input type="text" class="col-md-12 sweetTitle text-large" required title="Tests need a title" value="UntitledTest" id="testName" />
        <div>
            <textarea class="col-md-12 sweetTest" style="height: 10em" id="sweetStackCode">open -> http://www.bing.com
proof -> bing.png
type input.b_searchbox -> javascript
click -> #sb_form_go
wait -> 1
text -> 18,000,000 results
proof -> bing_search.png</textarea>
        </div>
        <p>
            <button class="btn btn-success" id="submitSuite">Validate</button>
            @Html.ActionLink("Save & Run", "Index", new { controller = "Runs" }, new { @class = "btn btn-default", id = "runSuite" })
        </p>
    </div>
</div>